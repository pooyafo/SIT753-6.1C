pipeline {
    agent any

    triggers {
        pollSCM('H/1 * * * *')  // Triggers every minute to check for new commits
    }

    stages {
        stage('Build') {
            steps {
                script {
                    // Build the project using Maven
                    sh 'mvn clean package'
                }
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                script {
                    // Run unit tests
                    sh 'mvn test'
                    // Run integration tests
                    sh 'mvn integration-test'
                }
            }
            post {
                success {
                    emailext(
                        to: "pooyafo@gmail.com",
                        subject: "Jenkins Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) - Test Stage Success",
                        body: "The test stage was successful.",
                        attachLog: true
                    )
                }
                failure {
                    emailext(
                        to: "pooyafo@gmail.com",
                        subject: "Jenkins Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) - Test Stage Failure",
                        body: "The test stage was NOT successful.",
                        attachLog: true
                    )
                }
            }
        }
        
        stage('Code Analysis') {
            steps {
                script {
                    // Perform static code analysis using SonarQube
                    sh 'sonar-scanner'
                }
            }
        }

        stage('Security Scan') {
            steps {
                script {
                    // Perform security scan using OWASP Dependency-Check
                    sh 'dependency-check --project "MyApp" --scan "./"'
                }
            }
            post {
                success {
                    emailext(
                        to: "pooyafo@gmail.com",
                        subject: "Jenkins Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) - Security Scan Success",
                        body: "The security scan was successful.",
                        attachLog: true
                    )
                }
                failure {
                    emailext(
                        to: "pooyafo@gmail.com",
                        subject: "Jenkins Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) - Security Scan Failure",
                        body: "The security scan was NOT successful.",
                        attachLog: true
                    )
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                script {
                    // Deploy the package to the staging server
                    sh 'aws deploy create-deployment --application-name MyApp --deployment-group-name Staging'
                }
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                script {
                    // Run tests in the staging environment
                    sh 'postman-collection-runner --environment staging --collection my-tests.json'
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                script {
                    // Deploy the package to the production server
                    sh 'aws deploy create-deployment --application-name MyApp --deployment-group-name Production'
                }
            }
        }
    }
}