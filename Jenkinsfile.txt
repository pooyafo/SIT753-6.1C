pipeline {
    agent any

    triggers {
        pollSCM('H/1 * * * *')  // Triggers every minute to check for new commits
    }

    stages {
        stage('Build') {
            steps {
                script {
                    // Build the project using Maven
                    echo "mvn clean package"
                }
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                script {
                    // Run unit tests
                    echo "mvn test"
                    // Run integration tests
                    echo "mvn integration-test"
                }
            }
            post {
                success {
                    emailext(
                        to: "pooyafo@gmail.com",
                        subject: "Jenkins Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) - Test Stage Success",
                        body: "The test stage was successful.",
                        attachLog: true
                    )
                }
                failure {
                    emailext(
                        to: "pooyafo@gmail.com",
                        subject: "Jenkins Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) - Test Stage Failure",
                        body: "The test stage was NOT successful.",
                        attachLog: true
                    )
                }
            }
        }
        
        stage('Code Analysis') {
            steps {
                script {
                    // Perform static code analysis using SonarQube
                    echo "sonar-scanner"
                }
            }
        }

        stage('Security Scan') {
            steps {
                script {
                    // Perform security scan using OWASP Dependency-Check
                    echo "dependency-check --project "MyApp" --scan "./""
                }
            }
            post {
                success {
                    emailext(
                        to: "pooyafo@gmail.com",
                        subject: "Jenkins Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) - Security Scan Success",
                        body: "The security scan was successful.",
                        attachLog: true
                    )
                }
                failure {
                    emailext(
                        to: "pooyafo@gmail.com",
                        subject: "Jenkins Job '${env.JOB_NAME}' (${env.BUILD_NUMBER}) - Security Scan Failure",
                        body: "The security scan was NOT successful.",
                        attachLog: true
                    )
                }
            }
        }

        stage('Deploy to Staging') {
            steps {
                script {
                    // Deploy to the staging server
                    echo "aws deploy create-deployment --application-name MyApp --deployment-group-name Staging"
                }
            }
        }

        stage('Integration Tests on Staging') {
            steps {
                script {
                    // Run tests in the staging environment
                    echo "postman-collection-runner --environment staging --collection my-tests.json"
                }
            }
        }

        stage('Deploy to Production') {
            steps {
                script {
                    // Deploy to the production server
                    echo "aws deploy create-deployment --application-name MyApp --deployment-group-name Production"
                }
            }
        }
    }
}